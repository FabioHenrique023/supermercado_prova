@model supermercado_prova.Models.Cliente;

@{
    var isEditing = Model.Id != 0;
    ViewData["Title"] = isEditing ? "Editar Cliente" : "Novo Cliente";
}

<style>
   .field-validation-error {
        color: red;
    }
    .card {
        box-shadow: 0 4px 2px 0 rgba(0,0,0,0.2);
        transition: 0.3s;
    }
    .multiselect {
        width: ;
    }

    .selectBox {
        position: relative;
    }

    .selectBox select {
        width: 100%;
        font-weight: bold;
    }

    .overSelect {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
    }

    #checkboxes {
        display: none;
        border: 1px #dadada solid;
    }

    #checkboxes label {
        display: block;
    }

    .negrito {
        font-weight: bold;
    }
</style>

@if (!String.IsNullOrEmpty(ViewBag.Errors))
{
    <script>
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: '@Html.Raw(ViewBag.Errors)',
            timer: 3000,
            showConfirmButton: false
        })
    </script>
}

<div class="card">
    <div class="card-body">

        <div class="container d-flex justify-content-center align-items-center">
            <div class="col-md-8">
            
                <h1 class="text-success text-center font-weight-bold" style="font-family: Times new roman">@ViewData["Title"]</h1>
                
                <div class="row">
                    <div class="col-md-12">
                        <form asp-action="Cliente" asp-controller="Cliente" enctype="multipart/form-data">
                        
                            <input type="hidden" asp-for="Id" />

                            <div class="row">
                                <div class="col-md-6 form-group">
                                    @Html.LabelFor(model => model.CodigoFiscal, new { @class = "text-dark" })
                                    @Html.TextBoxFor(model => model.CodigoFiscal, new { @class = "form-control", placeholder = "Codigo Fiscal" })
                                    @Html.ValidationMessageFor(model => model.CodigoFiscal)      
                                </div>
                                <div class="col-md-6 form-group">
                                    @Html.LabelFor(model => model.InscricaoEstadual, new { @class = "text-dark" })
                                    @Html.TextBoxFor(model => model.InscricaoEstadual, new { @class = "form-control", placeholder = "Inscrição Estatudal" })
                                    @Html.ValidationMessageFor(model => model.InscricaoEstadual)   
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 form-group">
                                    @Html.LabelFor(model => model.Nome, new { @class = "text-dark" })
                                    @Html.TextBoxFor(model => model.Nome, new { @class = "form-control", placeholder = "Nome" })
                                    @Html.ValidationMessageFor(model => model.Nome)      
                                </div>
                                <div class="col-md-6 form-group">
                                    @Html.LabelFor(model => model.NomeFantasia, new { @class = "text-dark" })
                                    @Html.TextBoxFor(model => model.NomeFantasia, new { @class = "form-control", placeholder = "Nome Fantasia" })
                                    @Html.ValidationMessageFor(model => model.NomeFantasia)   
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 form-group">
                                    @Html.LabelFor(model => model.Endereco, new { @class = "text-dark" })
                                    @Html.TextBoxFor(model => model.Endereco, new { @class = "form-control", placeholder = "Endereço" })
                                    @Html.ValidationMessageFor(model => model.Endereco) 
                                </div>
                                <div class="col-md-3 form-group">
                                    @Html.LabelFor(model => model.Numero, new { @class = "text-dark" })
                                    @Html.TextBoxFor(model => model.Numero, new { @class = "form-control", placeholder = "Número" })
                                    @Html.ValidationMessageFor(model => model.Numero) 
                                </div>
                                <div class="col-md-3 form-group">
                                    @Html.LabelFor(model => model.Bairro, new { @class = "text-dark" })
                                    @Html.TextBoxFor(model => model.Bairro, new { @class = "form-control", placeholder = "Bairro" })
                                    @Html.ValidationMessageFor(model => model.Bairro) 
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 form-group">
                                    @Html.LabelFor(model => model.Estado, new { @class = "text-dark" })
                                    @Html.DropDownListFor(model => model.Estado, ViewBag.Estados as SelectList, "Selecione um Estado", new { @class = "form-control", data_cidade_atual = Model.Cidade })
                                    @Html.ValidationMessageFor(model => model.Estado) 
                                </div>

                                <div class="col-md-6 form-group">
                                    @Html.LabelFor(model => model.Cidade, new { @class = "text-dark" })
                                    @Html.DropDownListFor(model => model.Cidade, new SelectList(Enumerable.Empty<string>()), "Selecione um estado primeiro", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Cidade) 
                                </div>

                                <div class="col-md-6 form-group">
                                    @Html.LabelFor(model => model.DataCliente, new { @class = "text-dark" })
                                    <input asp-for="DataCliente" class="form-control"/>
                                    @Html.ValidationMessageFor(model => model.DataCliente)   
                                </div>
                            </div>

                            <div class="form-group mt-2">
                                @Html.LabelFor(model => model.Imagens, new { @class = "text-dark" })
                                <input type="file" id="anexo" name="anexo" required/>
                                @if (isEditing && !string.IsNullOrEmpty(Model.Imagens))
                                {
                                    <img 
                                        src="@Url.Content(Model.Imagens)" 
                                        alt="Imagem do Cliente" 
                                        class="img-thumbnail rounded-circle w-25"
                                    />
                                }
                            </div>

                            <div class="form-group mt-3 d-flex gap-2">
                                <button type="submit" class="btn btn-outline-success btn-lg">
                                    <i class="fa fa-save"></i> Salvar
                                </button>
                                @if (isEditing)
                                {
                                    <a asp-action="Exportar" asp-route-id="@Model.Id" class="btn btn-outline-primary btn-lg">
                                        <i class="fa fa-file"></i> Exportar
                                    </a>
                                    <a asp-action="Listar" class="btn btn-outline-danger btn-lg">
                                        <i class="fa fa-times"></i> Cancelar
                                    </a>
                                }
                            </div>

                        </form>                                           
                    </div>
                </div>
            </div>
        </div>  
    </div>
</div>

<script>
//logica para seleção de estado/cidade
$(document).ready(function() {
    function carregarCidades(selectedEstado, cidade = null) {
        $.getJSON('/Cliente/GetCidades', { nome: selectedEstado }, function(data) {
            var items = '<option value="">Selecione uma cidade</option>';
            $.each(data, function(i, cidade) {
                items += '<option value="' + cidade + '">' + cidade + '</option>';
            });
            $('#Cidade').html(items);
            if (cidade) {
                $('#Cidade').val(cidade);
            }
        });
    }

    $('#Estado').change(function() {
        var selectedEstado = $(this).val();
        carregarCidades(selectedEstado);
    });

    var estadoSelecionado = $('#Estado').val();
    var cidadeAtual = $('#Estado').data('cidade-atual');
    if (estadoSelecionado) {
        carregarCidades(estadoSelecionado, cidadeAtual);
    }
});

//valida quantidade imagem
$(document).ready(function(){
    $('#anexo').on('change', function(){
        if(this.files.length > 1){
            alert('Você só pode selecionar até 1.');
            this.value = '';
        }
    });
});

</script>